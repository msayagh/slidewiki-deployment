version: '2'

volumes:

  learninglocker-data:
  files:
    external: true

services:

  webserver:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - BASENAME=${BASE_DOMAIN}

  maildev: 
    image: djfarrelly/maildev
    command: "bin/maildev --web 80 --smtp ${SMTP_PORT} --incoming-user ${SMTP_USER} --incoming-pass ${SMTP_PASS}"
    expose:
      - ${SMTP_PORT}
      - 80
    environment:
      - VIRTUAL_HOST=maildev.${BASE_DOMAIN}
      - VIRTUAL_PORT=80

  agendash:
    image: lgatica/docker-agendash
    restart: always
    expose:
      - 3000
    environment:
      - VIRTUAL_HOST=agendash.${BASE_DOMAIN}
      - MONGODB_URI=mongodb://${BASE_DOMAIN}:27017/slidewiki
      - MONGODB_COLLECTION=agendaJobs


  platform:
    image: slidewiki/platform:${SLIDEWIKI_TEST_VERSION}
    expose:
      - 3000
    depends_on:
      - webserver
      - deckservice
      - userservice
      - activitiesservice
      - discussionservice
      - notificationservice
      - importservice
      - pdfservice
      - fileservice
      - searchservice
      - tagservice
      - signalingservice
      - questionservice
      - searchindexer
    environment:
      - VIRTUAL_HOST=${BASE_DOMAIN}
      - SERVICE_USER_PRIVATE_RECAPTCHA_KEY=${RECAPTCHA_PRIVATE_KEY}
      - SERVICE_USER_PUBLIC_RECAPTCHA_KEY=${RECAPTCHA_PUBLIC_KEY}
      - SERVICE_USER_APIKEY
      - SERVICE_URL_DECK
      - SERVICE_URL_DISCUSSION
      - SERVICE_URL_ACTIVITIES
      - SERVICE_URL_NOTIFICATION
      - SERVICE_URL_TAG
      - SERVICE_URL_QUESTION
      - SERVICE_URL_SEARCH
      - SERVICE_URL_USER=http://userservice.${BASE_DOMAIN}
      - SERVICE_URL_FILE=http://fileservice.${BASE_DOMAIN}
      - SERVICE_URL_PDF=http://pdfservice.${BASE_DOMAIN}
      - SERVICE_URL_SIGNALING=http://signalingservice.${BASE_DOMAIN}
      - SERVICE_URL_IMPORT=http://importservice.${BASE_DOMAIN}/importPPTX
      - SERVICE_URL_NLP=http://nlpservice:9000
      - SERVICE_URL_ANALYTICS=http://analyticsservice:8080
      - SERVICE_URL_RECOMMENDER=http://recommenderservice:8000
      - SERVICE_LEARNINGLOCKER_API_URL
      - SERVICE_LEARNINGLOCKER_API_AUTH
      - SMTP_PORT
      - SMTP_HOST
      - SMTP_FROM
      - SMTP_TO
      - SMTP_ENABLED
      - LOGGING_LEVEL

  deckservice:
    image: slidewiki/deckservice:${SLIDEWIKI_TEST_VERSION}
    environment:
      - VIRTUAL_HOST=deckservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - URL_PLATFORM=http://${BASE_DOMAIN}
      - SERVICE_URL_USER
      - SERVICE_URL_TAG
      - SERVICE_URL_FILE
      - SECRET_REVIEW_KEY
      - JWT_SERIAL

  unoconvservice:
    image: zrrrzzt/docker-unoconv-webservice
    environment:
      - PAYLOAD_MAX_SIZE=314572800

  signalingservice:
    image: slidewiki/webrtcsignalingservice:${SLIDEWIKI_VERSION}
    environment:
      - VIRTUAL_HOST=signalingservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
    volumes:
      - /data/slidewiki/slidewiki-deployment/docker-compose/signalingservice/twitterConfig.json:/nodeApp/config.json:ro

  activitiesservice:
    image: slidewiki/activitiesservice:${SLIDEWIKI_VERSION}
    depends_on:
      - deckservice
      - notificationservice
      - xapi
    environment:
      - VIRTUAL_HOST=activitiesservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK
      - SERVICE_URL_NOTIFICATION
      - SERVICE_URL_USER
      - URL_PLATFORM=http://${BASE_DOMAIN}
      - LRS_ENDPOINT
      - LRS_PUBLIC_KEY
      - LRS_SECRET

  discussionservice:
    image: slidewiki/discussionservice:${SLIDEWIKI_VERSION}
    depends_on:
      - deckservice
    environment:
      - VIRTUAL_HOST=discussionservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK
      - SERVICE_URL_USER

  notificationservice:
    image: slidewiki/notificationservice:${SLIDEWIKI_VERSION}
    environment:
      - VIRTUAL_HOST=notificationservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_USER

  importservice:
    image: slidewiki/importservice:${SLIDEWIKI_VERSION}
    depends_on:
      - deckservice
      - fileservice
      - unoconvservice
    environment:
      - VIRTUAL_HOST=importservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - SERVICE_URL_DECK
      - SERVICE_URL_UNOCONV
      - SERVICE_URL_FILE=http://fileservice.${BASE_DOMAIN}
      - JWT_SERIAL

  userservice:
    image: slidewiki/userservice:${SLIDEWIKI_VERSION}
    volumes:
      - /data/slidewiki/slidewiki-deployment/docker-compose/userservice/providerConfig.json:/nodeApp/config.json:ro
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=userservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - URL_PLATFORM=http://${BASE_DOMAIN}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - APIKEY=${SERVICE_USER_APIKEY}
      - SECRET_REVIEW_KEY
      - JWT_SERIAL
      - SMTP_PORT
      - SMTP_HOST
      - SMTP_FROM
      - SMTP_CLIENTNAME=
      - SMTP_ENABLED

  pdfservice:
    image: slidewiki/pdfservice:${SLIDEWIKI_VERSION}
    depends_on:
      - deckservice
    environment:
      - VIRTUAL_HOST=pdfservice.${BASE_DOMAIN}
      - SERVICE_URL_PLATFORM=http://${BASE_DOMAIN}
      - SERVICE_URL_PDF=http://pdfservice.${BASE_DOMAIN}
      - SERVICE_URL_DECK
      - SERVICE_URL_USER

  fileservice:
    image: slidewiki/fileservice:${SLIDEWIKI_VERSION}
    volumes:
      - files:/data/files
    depends_on:
      - deckservice
    environment:
      - VIRTUAL_HOST=fileservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - APPLICATION_PATH=/data/files
      - SERVICE_URL_PLATFORM=http://${BASE_DOMAIN}
      - SERVICE_URL_DECK

  searchservice:
    image: slidewiki/searchservice:${SLIDEWIKI_VERSION}
    depends_on:
      # - solr
      - deckservice
    environment:
      - VIRTUAL_HOST=searchservice.${BASE_DOMAIN}
      - DATABASE_URL=${MONGODB_HOST}
      - APPLICATION_PORT=80
      - SOLR_CORE=swikcore
      - SOLR_HOST
      - SOLR_CONFIG_PORT
      - SERVICE_URL_DECK
      - SERVICE_URL_USER

  searchindexer:
    image: slidewiki/searchservice:${SLIDEWIKI_VERSION}
    command: 'node worker'
    depends_on:
      # - solr
      - deckservice
    environment:
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK
      - SERVICE_URL_USER
      - SOLR_CORE=swikcore
      - SOLR_HOST
      - SOLR_CONFIG_PORT
      - AGENDA_JOBS_COLLECTION=agendaJobs
      - AGENDA_JOBS_CONCURRENCY=2
      - JOB_TYPES=searchUpdate

  tagservice:
    image: slidewiki/tagservice:${SLIDEWIKI_VERSION}
    environment:
      - VIRTUAL_HOST=tagservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}

  nlpservice:
    image: slidewiki/nlpservice:${SLIDEWIKI_VERSION}
    expose:
      - 9000
    environment:
      - VIRTUAL_HOST=nlpservice.${BASE_DOMAIN}
      - APPLICATION_SECRET=${SERVICE_NLP_SECRET}
      - SERVICE_URL_DECK
      - SERVICE_URL_NLPSTORE
    depends_on:
      - deckservice
      - nlpstore

  nlpstore:
    image: slidewiki/nlpstore:${SLIDEWIKI_VERSION}
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=nlpstore.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK
      - SOLR_CORE=swiknlp
      - SOLR_HOST
      - SOLR_CONFIG_PORT
      - AGENDA_JOBS_COLLECTION=agendaJobs
      - AGENDA_JOBS_CONCURRENCY=1
    depends_on:
      # - solr
      - deckservice

  nlpstoreupdater:
    image: slidewiki/nlpstore:${SLIDEWIKI_VERSION}
    command: 'node worker'
    environment:
      - DATABASE_PORT=27017
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK
      - SERVICE_URL_NLP=http://nlpservice:9000
      - SOLR_CORE=swiknlp
      - SOLR_HOST
      - SOLR_CONFIG_PORT
      - AGENDA_JOBS_COLLECTION=agendaJobs
      - AGENDA_JOBS_CONCURRENCY=1
      - JOB_TYPES=nlpUpdate
    depends_on:
      # - solr
      - deckservice
      - nlpservice

  questionservice:
    image: slidewiki/questionservice:${SLIDEWIKI_VERSION}
    depends_on:
      - deckservice
    environment:
      - VIRTUAL_HOST=questionservice.${BASE_DOMAIN}
      - APPLICATION_PORT=80
      - DATABASE_URL=${MONGODB_HOST}
      - SERVICE_URL_DECK


  recommenderservice:
    image: slidewiki/recommenderservice:${SLIDEWIKI_VERSION}
    environment:
      - VIRTUAL_HOST=recommenderservice.${BASE_DOMAIN}
      - FLASK_SERVER_NAME=recommenderservice.${BASE_DOMAIN}
      - MAX_FEATURES=2000
      - SERVICE_URL_DECK
      - SERVICE_URL_USER
      - SERVICE_URL_ACTIVITIES
      - SERVICE_URL_NLP=http://nlpservice:9000
    volumes:
      - /data/slidewiki/recommender-service/data:/data
    depends_on:
      - deckservice
      - userservice
      - activitiesservice
      - nlpservice
      - nlpstore


  analyticsservice:
    image: slidewiki/analyticsservice:${SLIDEWIKI_VERSION}
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=analyticsservice.${BASE_DOMAIN}
      - SERVICE_URL_ACTIVITIES


  redis:
    image: redis:4-alpine

  xapi:
    image: learninglocker/xapi-service:${LEARNINGLOCKER_XAPI_VERSION}
    expose:
      - 80
    environment:
      - EXPRESS_PORT=80
      - MONGO_URL=${LEARNINGLOCKER_MONGO_URL}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis

  learninglockerapi:
    image: slidewiki/learninglocker2-docker:latest
    command: "node api/dist/server"
    expose:
      - ${SERVICE_PORT_LEARNINGLOCKER_API}
    volumes:
      - learninglocker-data:/opt/learninglocker/storage
    environment:
      - VIRTUAL_HOST=api.learninglocker.${BASE_DOMAIN}
      - VIRTUAL_PORT=${SERVICE_PORT_LEARNINGLOCKER_API}
      - DOMAIN_NAME=${BASE_DOMAIN}
      - APP_SECRET=${LEARNINGLOCKER_SECRET}
      - UI_PORT=${SERVICE_PORT_LEARNINGLOCKER}
      - API_PORT=${SERVICE_PORT_LEARNINGLOCKER_API}
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASS
      - SMTP_IGNORE_TLS
      - MONGO_URL=${LEARNINGLOCKER_MONGO_URL}
    depends_on:
      - redis

  learninglockerui:
    image: slidewiki/learninglocker2-docker:latest
    command: "./entrypoint-ui.sh"
    expose:
      - ${SERVICE_PORT_LEARNINGLOCKER}
    volumes:
      - learninglocker-data:/opt/learninglocker/storage
    environment:
      - VIRTUAL_HOST=learninglocker.${BASE_DOMAIN}
      - VIRTUAL_PORT=${SERVICE_PORT_LEARNINGLOCKER}
      - DOMAIN_NAME=${BASE_DOMAIN}
      - APP_SECRET=${LEARNINGLOCKER_SECRET}
      - UI_PORT=${SERVICE_PORT_LEARNINGLOCKER}
      - API_PORT=${SERVICE_PORT_LEARNINGLOCKER_API}
      - API_HOST=learninglockerapi
      - MONGO_URL=${LEARNINGLOCKER_MONGO_URL}
    depends_on:
      - redis
      - learninglockerapi
      - learninglockerworker

  learninglockerworker:
    image: slidewiki/learninglocker2-docker:latest
    command: "node worker/dist/server"
    expose: []
    volumes:
      - learninglocker-data:/opt/learninglocker/storage
    environment:
      - DOMAIN_NAME=${BASE_DOMAIN}
      - APP_SECRET=${LEARNINGLOCKER_SECRET}
      - REDIS_HOST
      - MONGO_URL=${LEARNINGLOCKER_MONGO_URL}
    depends_on:
      - redis
